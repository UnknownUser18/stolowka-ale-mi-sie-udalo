@use 'variables' as v;
@use 'functions' as f;

@mixin flex-center($direction: row, $justify: center, $align: center) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  @if $direction == column {
    flex-direction: column;
  }
}

@mixin hover-logic($type, $color: inherit, $h-color) {
  transition: f.transition($type);
  @if $type == color {
    color: $color;
    &:hover {
      color: $h-color;
    }
  } @else {
    background-color: $color;
    &:hover {
      background-color: $h_color;
    }
  }
}

@mixin background-hover($bg-color: inherit, $h-bg-color) {
  @include hover-logic(background-color, $bg-color, $h-bg-color);
}

@mixin clickable-hover($color : inherit, $h-color) {
  @include hover-logic(color, $color, $h_color);
  cursor: pointer;
}

@mixin font($size: 1em, $weight: 400, $color: inherit) {
  color: $color;
  font-size: $size;
  @if $weight != 400 {
    font-weight: $weight;
  }
}

@mixin font-500($color: inherit) {
  @include font(1.5em, 500, $color);
}

@mixin overlay {
  @include flex-center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

@mixin button($padding, $color: inherit, $bg-color, $h-color: inherit, $h-bg-color) {
  @include font(1em, 500, $color);
  transition: f.transition(color, v.$medium), f.transition(background-color, v.$medium);
  padding: $padding $padding * 2;
  border-radius: 15px;
  background-color: $bg-color;
  &:hover {
    @if $h-color != inherit {
      color: $h-color;
    } @else {
      color: $color;
    }
    background-color: $h-bg-color;
  }
}

@mixin window {
  @include overlay;
  transition: f.transition(backdrop-filter, v.$xlong);
  background-color: rgba(var(--color-1), 0.5);
  backdrop-filter: none;
  overflow: hidden;
  &.done {
    backdrop-filter: blur(10px);
  }
  .close {
    @include clickable-hover(var(--color-12), var(--color-13));
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 3em;
  }
  div {
    transition: f.transition(margin-top, v.$xlong);
    box-shadow: v.$box-shadow;
    width: 50%;
    position: relative;
    padding: 15px 30px;
    border-radius: 25px;
    background-color: var(--color-3);
    margin-top: 100%;

    &.done {
      margin-top: 0;
    }
  }
}

@mixin table {
  tbody, thead, tr {
    width: 100%;
    display: contents;
  }
  td, th {
    @include flex-center;
    border-right: 2px solid var(--color-10);

    &:last-child {
      border-right: none;
    }
  }
}

@mixin fieldset {
  fieldset {
    transition: f.transition(border-color, v.$medium);
    margin: 0 10px;
    display: flex;
    padding: 25px 10px;
    border-radius: 10px;
    flex-direction: column;
    border-color: var(--color-11);

    &:focus-within {
      border-color: var(--color-12);

      legend, legend i {
        color: var(--color-13);
      }
    }

    legend {
      @include font-500(var(--color-12));
      transition: f.transition(color);
      margin: 0 15px 15px 15px;

      i {
        margin-right: 10px;
      }
    }
  }

  label {
    display: flex;
    flex-direction: column;
    margin: 10px 0;

    span {
      @include font-500(var(--color-13));
      margin-bottom: 15px;
    }

    input {
      transition: f.transition(outline-color);
      outline: 2px solid transparent;
      border-radius: 20px;
      padding: 10px 15px;
      background-color: var(--color-2);
      font-size: 1.3em;

      &:focus {
        outline-color: var(--color-10);
      }
    }

    select {
      border-radius: 20px;
      padding: 10px 15px;
      background-color: var(--color-2);
      font-size: 1.3em;

      option {
        font-size: 0.9em;
        color: var(--color-13);
      }
    }
  }
}

@mixin checkbox {
  cursor: pointer;
  user-select: none;
  width: clamp(200px, 60%, 350px);

  input {
    display: none;
  }

  div {
    @include flex-center;
    width: 24px;
    height: 24px;
    border-radius: 5px;
    background-color: var(--color-4);
    cursor: pointer;
    position: relative;
  }

  input[type="checkbox"]:checked + div::after {
    content: 'âœ“';
    font-size: 1.5em;
    width: 24px;
    height: 24px;
    border-radius: 3px;
    position: absolute;
    top: -2px;
    left: 2px;
  }
}

@mixin table_normal($width: 100%) {
  width: $width;
  margin: 0 auto;
  border-collapse: collapse;
  table-layout: fixed;

  thead {
    display: table;
    width: 100%;
    table-layout: fixed;
  }

  tbody {
    display: block;
    width: 100%;
    max-height: 50dvh;
    overflow-y: auto;
    border-radius: 0 0 20px 20px;
  }

  tr {
    display: table;
    width: 100%;
    table-layout: fixed;

    &:last-of-type td {
      border-bottom: none;
    }

    &:nth-child(odd) td {
      background-color: var(--color-6);
    }

    td, th {
      text-align: center;
      padding: 10px 20px;
      border-left: 2px solid var(--color-10);

      &:first-child {
        border-left: none;
      }
    }

    th {
      @include font-500(var(--color-13));
      position: sticky;
      top: -2px;
      background-color: var(--color-2);

      &:first-of-type {
        border-top-left-radius: 20px;
      }

      &:last-of-type {
        border-top-right-radius: 20px;
      }
    }

    td {
      @include font($size: 1.2em, $color: var(--color-13));
      background-color: var(--color-4);
      border-bottom: 2px solid var(--color-10);
      line-height: 2;
    }
  }
}
